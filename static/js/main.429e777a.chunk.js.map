{"version":3,"sources":["assets/github.png","components/Header.js","components/Usercard.js","App.js","index.js"],"names":["Header","props","Navbar","color","light","expand","NavbarBrand","src","githublogo","alt","width","height","Nav","className","navbar","type","value","search","onChange","e","handleSearch","target","placeholder","onClick","fetchUser","UserCard","userRecord","avatar_url","created_at","public_repos","name","location","bio","console","log","userExist","Card","CardImg","top","CardBody","CardTitle","tag","CardText","Date","toDateString","App","setState","state","loading","fetch","then","res","json","data","users","catch","err","alert","this","Spinner","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2RAAe,MAA0B,mCC4B1BA,EAnBA,SAACC,GACd,OACE,8BACE,eAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAnC,UACE,eAACC,EAAA,EAAD,WACE,qBAAKC,IAAKC,EAAYC,IAAI,SAASC,MAAM,KAAKC,OAAO,OADvD,wBAGE,eAACC,EAAA,EAAD,CAAKC,UAAU,uBAAuBC,QAAM,EAA5C,UAEA,uBAAOC,KAAK,SAASC,MAAOf,EAAMgB,OAAQJ,UAAU,eAAeK,SAAU,SAACC,GAAD,OAAMlB,EAAMmB,aAAaD,EAAEE,OAAOL,QAAQM,YAAY,wBACnI,wBAAQT,UAAU,kBAClBU,QAAStB,EAAMuB,UADf,6B,wCCWKC,EAxBE,SAACxB,GAAW,IAAD,EAC4CA,EAAMyB,WAApEC,EADkB,EAClBA,WAAYC,EADM,EACNA,WAAYC,EADN,EACMA,aAAcC,EADpB,EACoBA,KAAMC,EAD1B,EAC0BA,SAAUC,EADpC,EACoCA,IAE9D,OADAC,QAAQC,IAAIjC,EAAMyB,YAGhB,qBAAKb,UAAU,4CAAf,SACGZ,EAAMkC,WACP,qCACE,6CACA,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAASC,KAAG,EAAC5B,MAAM,OAAOH,IAAKoB,EAAYlB,IAAI,mBAC/C,eAAC8B,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,UAAoB,4CAApB,IAAwCX,KACxC,eAACY,EAAA,EAAD,CAAUD,IAAI,KAAK5B,UAAU,kBAA7B,UAA+C,6CAAoBkB,KACnE,eAACW,EAAA,EAAD,WAAU,8CAAV,IAAgCV,KAChC,eAACU,EAAA,EAAD,WAAU,6CAAV,IAA+Bb,KAC/B,eAACa,EAAA,EAAD,WAAU,6CAAV,IAA+B,IAAIC,KAAKf,GAAYgB,8B,QC2B/CC,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAUFzB,aAAe,SAACD,GACd,EAAK2B,SAAS,CACZ7B,OAAQE,KAbE,EAiBdK,UAAY,WACgB,KAAtB,EAAKuB,MAAM9B,SACb,EAAK6B,SAAS,CACZE,SAAS,IAEXC,MAAM,gCAAD,OAAiC,EAAKF,MAAM9B,SAC9CiC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACL,EAAKP,SAAS,CAAEQ,MAAOD,EAAML,SAAU,EAAOb,WAAW,OAE1DoB,OAAM,SAACC,GAAD,OAASC,MAAM,4BAzB1B,EAAKV,MAAQ,CACX9B,OAAQ,GACRqC,MAAO,GACPN,SAAS,EACTb,WAAY,GANF,E,qDA+BJ,IAAD,OACP,OACE,gCACE,cAAC,EAAD,CAAQlB,OAAQyC,KAAKX,MAAM9B,OAAQO,UAAWkC,KAAKlC,UAAWJ,aAAc,SAACD,GAAD,OAAO,EAAKC,aAAaD,MACpGuC,KAAKX,MAAMC,SAAW,qBAAKnC,UAAU,SAAf,SAAwB,cAAC8C,EAAA,EAAD,CAAS5C,KAAK,OAAOZ,MAAM,WAC1E,cAAC,EAAD,CAAUuB,WAAcgC,KAAKX,MAAMO,MAAOnB,UAAWuB,KAAKX,MAAMZ,mB,GArCtDyB,IAAMC,WCDxBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.429e777a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.492cd893.png\";","import React from 'react';\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarText,\r\n  Nav\r\n} from 'reactstrap';\r\nimport githublogo from '../assets/github.png'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand >\r\n          <img src={githublogo} alt=\"github\" width=\"50\" height=\"50\" />\r\n          Github User Finder</NavbarBrand>\r\n          <Nav className=\"mr-auto d-flex w-100\" navbar>\r\n          {/* <NavbarText className=\"d-flex\"> */}\r\n          <input type=\"search\" value={props.search} className=\"form-control\" onChange={(e)=> props.handleSearch(e.target.value)} placeholder=\"Search User by name\" />\r\n          <button className=\"btn btn-primary\" \r\n          onClick={props.fetchUser}>Search</button>\r\n          {/* </NavbarText> */}\r\n          </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle\r\n} from 'reactstrap';\r\n\r\nconst UserCard = (props) => {\r\n  const { avatar_url, created_at, public_repos, name, location, bio } = props.userRecord;\r\n  console.log(props.userRecord)\r\n  return (\r\n\r\n    <div className=\"offset-lg-2 col-4 mt-2 col-sm-12 col-md-6\" >\r\n      {props.userExist &&\r\n      <>\r\n        <h1>Github User</h1>\r\n        <Card>\r\n        <CardImg top width=\"100%\" src={avatar_url} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\"><b>User Name :</b> {name}</CardTitle>\r\n          <CardText tag=\"h6\" className=\"mb-2 text-muted\"><b>Location :  </b>{location}</CardText>\r\n          <CardText><b>Description :</b> {bio}</CardText>\r\n          <CardText><b>Repository :</b> {public_repos}</CardText>\r\n          <CardText><b>Created_at :</b> {new Date(created_at).toDateString()}</CardText>\r\n        </CardBody>\r\n      </Card> \r\n      </>}    \r\n    </div>\r\n  ); \r\n};\r\n\r\nexport default UserCard;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport UserCard from './components/Usercard'\nimport {Spinner} from 'reactstrap';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      search: '',\n      users: {},\n      loading: false,\n      userExist : false,\n    }\n  }\n\n\n  handleSearch = (e) => {\n    this.setState({\n      search: e\n    })\n  }\n\n  fetchUser = () => {\n    if (this.state.search !== '' ) {\n      this.setState({\n        loading: true\n      })\n      fetch(`https://api.github.com/users/${this.state.search}`)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ users: data, loading : false, userExist: true })\n      })\n        .catch((err) => alert('Error Getting Users'))\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header search={this.state.search} fetchUser={this.fetchUser} handleSearch={(e) => this.handleSearch(e)} />\n        {this.state.loading && <div className=\"center\"><Spinner type=\"grow\" color=\"info\" /></div>}\n        <UserCard userRecord = {this.state.users} userExist={this.state.userExist}/>\n      </div>\n    )\n  }\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}